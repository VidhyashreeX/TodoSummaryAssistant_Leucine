import { WebClient } from "@slack/web-api";

if (!process.env.SLACK_BOT_TOKEN) {
  console.warn("SLACK_BOT_TOKEN environment variable is not set. Slack integration will not work.");
}

if (!process.env.SLACK_CHANNEL_ID) {
  console.warn("SLACK_CHANNEL_ID environment variable is not set. Slack integration will not work.");
}

// Create Slack client only if token is provided
const slackClient = process.env.SLACK_BOT_TOKEN 
  ? new WebClient(process.env.SLACK_BOT_TOKEN)
  : null;

/**
 * Sends a todo summary to Slack
 * @param summary Summary text to send to Slack
 * @returns Promise resolving to the success status
 */
export async function sendSummaryToSlack(summary: string): Promise<{ success: boolean; message: string }> {
  if (!slackClient) {
    return { 
      success: false, 
      message: "Slack integration is not configured. Please set SLACK_BOT_TOKEN and SLACK_CHANNEL_ID environment variables."
    };
  }

  if (!process.env.SLACK_CHANNEL_ID) {
    return { 
      success: false, 
      message: "SLACK_CHANNEL_ID environment variable is not set."
    };
  }

  try {
    const channel = process.env.SLACK_CHANNEL_ID;
    const currentDate = new Date().toLocaleString();

    const result = await slackClient.chat.postMessage({
      channel,
      text: `*Todo Summary (${currentDate})*`,
      blocks: [
        {
          type: "header",
          text: {
            type: "plain_text",
            text: `Todo Summary (${currentDate})`,
            emoji: true
          }
        },
        {
          type: "section",
          text: {
            type: "mrkdwn",
            text: summary
          }
        },
        {
          type: "context",
          elements: [
            {
              type: "mrkdwn",
              text: "Generated by Todo Summary Assistant"
            }
          ]
        }
      ]
    });

    if (result.ok) {
      return { success: true, message: "Summary sent to Slack successfully" };
    } else {
      return { success: false, message: `Failed to send to Slack: ${result.error || "Unknown error"}` };
    }
  } catch (error) {
    console.error("Error sending to Slack:", error);
    return { success: false, message: `Error sending to Slack: ${error.message}` };
  }
}
